{"version":3,"sources":["pages/Home.js","pages/contribute/Step1.js","resources/face-outline.svg","components/Camera.js","components/FaceCropper.js","components/SelfieCapture.js","components/SelfieUpload.js","pages/contribute/Step2.js","pages/contribute/Step3.js","pages/Contribute.js","pages/Database.js","pages/About.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Step1","Camera","onCapture","React","useState","isReady","setIsReady","webcamRef","useRef","capture","useCallback","console","log","src","current","getScreenshot","image","Image","onload","width","height","meta","hash","md5","className","style","display","audio","mirrored","screenshotFormat","videoConstraints","facingMode","onUserMedia","ref","faceOutline","onClick","FaceCropper","onCrop","cropperRef","setIsInitialized","cropHandler","cropHandlerHelper","removeEventListener","useEffect","addEventListener","cropendHandler","imageElement","cropper","getCropBoxData","getCroppedCanvas","toDataURL","initialAspectRatio","guides","autoCrop","crop","cropend","dragMode","movable","rotatable","scalable","zoomable","SelfieCapture","rawImage","setRawImage","croppedImage","setCroppedImage","SelfieUpload","onUpload","rawImageRef","imageUploadedHandler","event","a","file","target","files","toBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","result","onerror","error","toImage","base64","img","type","onChange","PersonRow","index","images","setImages","isCaptureMode","setIsCaptureMode","isUploadMode","setIsUploadMode","imageElements","map","data-image-hash","backgroundImage","Step2","Step3","Contribute","match","useRouteMatch","Nav","fill","Item","Link","as","to","url","path","Database","About","NotFound","App","Navbar","bg","expand","Container","Brand","Toggle","aria-controls","Collapse","id","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa70d88a.chunk.js","sourcesContent":["\nconst Home = () => {\n  return (\n    <section>\n      <h1>CommunityFaceKinDB</h1>\n      <p>\n        Database of facial images colleced by community annotated with kinship attributes.\n      </p>\n    </section>\n  );\n}\n\nexport default Home;","const Step1 = () => {\n  return (\n    <section>\n      <h1>Step 1</h1>\n      <p>\n        Zakaj je ta anketa,\n        Kratka navodila,\n        poudari se anonimnost...\n      </p>\n    </section>\n  );\n};\n\nexport default Step1;","export default __webpack_public_path__ + \"static/media/face-outline.d8b16a1f.svg\";","import Webcam from \"react-webcam\";\nimport React from 'react';\nimport \"./camera.css\";\nimport faceOutline from \"../resources/face-outline.svg\"\nimport * as Icon from 'react-bootstrap-icons';\nimport md5 from \"md5\";\n\nconst Camera = ({ onCapture }) => {\n\n  const [isReady, setIsReady] = React.useState(false);\n  const webcamRef = React.useRef(null);\n  const capture = React.useCallback(\n    () => {\n      console.log(\"Capture event...\")\n      const src = webcamRef.current.getScreenshot();\n      const image = new Image();\n      image.onload = () => { \n        console.log(`Image captured (${image.width}x${image.height}).`)\n        onCapture({\n          src: src,\n          meta: {\n            hash: md5(src),\n            width: image.width,\n            height: image.height,\n          }\n        });\n      }\n      image.src = src;\n    },\n    [webcamRef]\n  );\n  \n  return (\n    <div className=\"camera\">\n      <div className=\"camera-loader\" style={{display: !isReady ? \"block\" : \"none\"}}>\n        <Icon.HourglassSplit  /><br/>\n        <span>Opening camera...</span>\n      </div>\n      <div className=\"camera-view\" style={{display: isReady ? \"block\" : \"none\"}}>\n        <Webcam\n          audio={false}\n          mirrored={true}\n          screenshotFormat=\"image/png\"\n          videoConstraints={{\n            facingMode: \"user\",\n            // width: { ideal: 4096 },\n            // height: { ideal: 2160 }\n          }}\n          onUserMedia={() => setIsReady(true)}\n          ref={webcamRef} />\n        <img src={faceOutline} />\n      </div>\n      <div className=\"cammera-buttons\">\n        <button><Icon.X /></button>\n        <button onClick={capture}><Icon.Camera /></button>\n      </div>\n    </div>\n  );\n}\n\nexport default Camera;\n","import React from 'react';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\nimport \"./faceCropper.css\";\nimport md5 from \"md5\";\n\nconst FaceCropper = ({image, onCrop}) => {\n\n  const cropperRef = React.useRef(null);\n  const [isInitialized, setIsInitialized] = React.useState(false);\n\n  const cropHandler = () => {\n    console.log(\"Initial crop event...\");\n    cropHandlerHelper();\n    cropperRef.current.removeEventListener('crop', cropHandler);\n  };\n\n  React.useEffect(() => {\n    cropperRef.current.addEventListener('crop', cropHandler);\n    return () => {\n      cropperRef.current.removeEventListener('crop', cropHandler);\n    }\n  }, []);\n\n  const cropendHandler = React.useCallback(\n    () => {\n      cropHandlerHelper();\n    },\n    [cropperRef]\n  );\n\n  const cropHandlerHelper = () => {\n    console.log(\"Cropend event...\");\n    const imageElement = cropperRef?.current;\n    const cropper = imageElement?.cropper;\n    const { width, height } = cropper.getCropBoxData();\n    const src = cropper.getCroppedCanvas().toDataURL();\n    console.log(`Cropped image (${width}x${height}).`)\n    onCrop({\n      src: src,\n      meta: {\n        hash: md5(src),\n        width: width,\n        height: height,\n      }\n    });\n    setIsInitialized(true);\n  }\n\n  return (\n    <div className=\"face-cropper\">\n      <Cropper\n                src={image.src}\n                initialAspectRatio={1}\n                guides={false}\n                autoCrop={true}\n                crop={cropHandler}\n                cropend={cropendHandler}\n                ref={cropperRef}\n                dragMode=\"crop\"\n                movable={false}\n                rotatable={false}\n                scalable={false}\n                zoomable={false}\n            />\n    </div>\n  );\n}\n\nexport default FaceCropper;\n","import React from \"react\";\nimport Camera from \"./Camera\"\nimport FaceCropper from \"./FaceCropper\"\nimport * as Icon from \"react-bootstrap-icons\"\nimport \"./SelfieCapture.css\"\n\nconst SelfieCapture = ({onCapture}) => {\n  const [rawImage, setRawImage] = React.useState(null);\n  const [croppedImage, setCroppedImage] = React.useState(null);\n\n  const backHandler = () => {\n    setRawImage(null);\n    setCroppedImage(null);\n  }\n\n  const cropHandler = () => {\n    onCapture(croppedImage)\n  };\n\n  return (\n    <div className=\"selfie-capture\">\n      { !rawImage && \n        <Camera onCapture={setRawImage} /> }\n      { rawImage &&\n        <div className=\"selfie-cropper\">\n          <FaceCropper image={rawImage} onCrop={setCroppedImage} />\n          <button className=\"backBtn\" onClick={backHandler}><Icon.X /></button>\n          <button className=\"okBtn\" onClick={cropHandler}><Icon.Check2 /></button>\n        </div> }\n    </div>\n  );\n};\n\nexport default SelfieCapture;","import React from \"react\";\nimport md5 from \"md5\";\nimport FaceCropper from \"./FaceCropper\"\nimport * as Icon from \"react-bootstrap-icons\"\nimport \"./SelfieUpload.css\"\n\nconst SelfieUpload =  ({onUpload}) => {\n  const rawImageRef = React.useRef();\n  const [rawImage, setRawImage] = React.useState(null);\n  const [croppedImage, setCroppedImage] = React.useState(null);\n\n  const imageUploadedHandler = async (event) => {\n    const file = event.target.files[0];\n    const toBase64 = file => new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n    const toImage = base64 => new Promise((resolve, reject) => {\n      const image = new Image();\n      image.onload = () => resolve(image);\n      image.onerror = error => reject(error);\n      image.src = base64;\n    });\n    const src = await toBase64(file);\n    const img = await toImage(src);\n    setRawImage({\n      src: src,\n      meta: {\n        hash: md5(src),\n        width: img.width,\n        height: img.height,\n      }\n    });\n  };\n\n  const backHandler = () => {\n    setRawImage(null);\n    setCroppedImage(null);\n  }\n\n  const cropHandler = () => {\n    onUpload(croppedImage)\n  };\n\n  return (\n    <div className=\"selfie-upload\">\n      { !rawImage && \n        <input type=\"file\" ref={rawImageRef} onChange={imageUploadedHandler} /> }\n      { rawImage &&\n        <div className=\"selfie-cropper\">\n          <FaceCropper image={rawImage} onCrop={setCroppedImage} />\n          <button className=\"backBtn\" onClick={backHandler}><Icon.X /></button>\n          <button className=\"okBtn\" onClick={cropHandler}><Icon.Check2 /></button>\n        </div> }\n    </div>\n  );\n}\n\nexport default SelfieUpload;","import md5 from \"md5\";\nimport React from \"react\";\nimport ImageUploader from \"react-images-upload\";\nimport SelfieCapture from \"../../components/SelfieCapture\";\nimport SelfieUpload from \"../../components/SelfieUpload\";\nimport \"./step2.css\";\n\nconst Step2 = () => {\n  return (\n    <section>\n      <h1>Step 2</h1>\n      <PersonRow type=\"Father\" />\n      <PersonRow type=\"Mother\" />\n      <PersonRow type=\"Son\" index={1} />\n    </section>\n  );\n};\n\nconst PersonRow = ({type, index}) => {\n  const [images, setImages] = React.useState([]);\n  const [isCaptureMode, setIsCaptureMode] = React.useState(false);\n  const [isUploadMode, setIsUploadMode] = React.useState(false);\n\n  const captureBtnClkHandler = () => setIsCaptureMode(true);\n  const uploadBtnClkHandler = () => setIsUploadMode(true);\n  const captureHandler = (img) => {\n    setIsCaptureMode(false);\n    setImages([...images, img]);\n  }\n  const uploadHandler = (img) => {\n    setIsUploadMode(false);\n    setImages([...images, img]);\n  }\n\n  const dropHandler = async (imageFiles) => {\n    const toBase64 = file => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n    const newImages = await Promise.all(imageFiles.map(async imageFile => {\n      const src = await toBase64(imageFile);\n      return {\n        src: src,\n        meta: {\n          hash: md5(src)\n        }\n      };\n    }));\n    // const src = URL.createObjectURL(image);\n    // const src = await toBase64(image);\n    // window.images = image;\n    console.log([...images, ...newImages]);\n    setImages([...images, ...newImages]);\n  }\n\n  const imageElements = images\n    .map(image => <div\n      key={image.meta.hash}\n      data-image-hash={image.meta.hash}\n      style={{\n        backgroundImage: `url(\"${image.src}\")`\n      }}\n      className=\"image-preview\" />);\n\n  return (\n    <div>\n      { isCaptureMode && <SelfieCapture onCapture={captureHandler} />  }\n      { isUploadMode && <SelfieUpload onUpload={uploadHandler} />  }\n      <div>\n        <span>{type}</span>\n        <span>#{index}</span>\n      </div>\n      <div>{imageElements}</div>\n      {/* <ImageUploader\n        withIcon={true}\n        buttonText=\"Choose images\"\n        onChange={dropHandler}\n        imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n        maxFileSize={5242880} /> */}\n      <div>\n        <button onClick={uploadBtnClkHandler}>Upload</button>\n        <button onClick={captureBtnClkHandler}>Capture</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Step2;","const Step3 = () => {\n  return (\n    <section>\n      <h1>Step 3</h1>\n      <p>\n        Strinjaj se z obdelavo podatkov, povdari anonimnost, zahvali se\n      </p>\n    </section>\n  );\n};\n\nexport default Step3;","import React from \"react\";\nimport { Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\n\nimport Step1 from \"./contribute/Step1\"\nimport Step2 from \"./contribute/Step2\"\nimport Step3 from \"./contribute/Step3\"\n\nimport {\n  Nav\n} from 'react-bootstrap';\n\nconst Contribute = () => {\n  const match = useRouteMatch();\n\n  return (\n    <section>\n      <Nav fill className=\"justify-content-center\">\n        <Nav.Item>\n          <Nav.Link as={Link} to={`${match.url}/1`}>Intro</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link as={Link} to={`${match.url}/2`}>Upload</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link as={Link} to={`${match.url}/3`}>Finish</Nav.Link>\n        </Nav.Item>\n      </Nav>\n\n      <Switch>\n        <Route path={`${match.url}/1`}>\n          <Step1 />\n        </Route>\n        <Route path={`${match.url}/2`}>\n          <Step2 />\n        </Route>\n        <Route path={`${match.url}/3`}>\n          <Step3 />\n        </Route>\n      </Switch>\n\n    </section>\n  );\n}\n\nexport default Contribute;","\nconst Database = () => {\n  return (\n    <section>\n      <h1>Database</h1>\n      <p>\n        info about database, attributes, annotations, number of families, number of faces, ...\n      </p>\n    </section>\n  );\n}\n\nexport default Database;","\nconst About = () => {\n  return (\n    <section>\n      <h1>About</h1>\n      <p>\n        about, cite, ...\n      </p>\n    </section>\n  );\n}\n\nexport default About;","import React from \"react\";\nimport { \n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\"\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Navbar,\n  Nav,\n  Container\n} from 'react-bootstrap';\n\nimport Home from \"./pages/Home\"\nimport Contribute from \"./pages/Contribute\"\nimport Database from \"./pages/Database\"\nimport About from \"./pages/About\"\n\nconst baseUrl = process.env.REACT_APP_BASE_URL;\n\nconst App = () => {\n\n  return (\n    <Router>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand as={Link} to={`/`} >CommunityFaceKinDB</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link as={Link} to={`/`} >Home</Nav.Link>\n              <Nav.Link as={Link} to={`/contribute`}>Contribute</Nav.Link>\n              <Nav.Link as={Link} to={`/database`}>Database</Nav.Link>\n              <Nav.Link as={Link} to={`/about`}>About</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Container>\n        <Switch>\n          <Route exact path={`/`}>\n            <Home />\n          </Route>\n          <Route path={`/contribute`}>\n            <Contribute />\n          </Route>\n          <Route path={`/database`}>\n            <Database />\n          </Route>\n          <Route path={`/about`} >\n            <About />\n          </Route>\n          <Route>\n            <NotFound path=\"*\" />\n          </Route>\n        </Switch>\n      </Container>\n    </Router>\n  );\n};\n\nconst NotFound = () => (<h1>404</h1>);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}