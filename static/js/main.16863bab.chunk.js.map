{"version":3,"sources":["pages/Home.js","pages/contribute/Step1.js","components/Spinner.js","components/Activity.js","components/Cropper.js","utils.js","components/SelfieUploadButton.js","resources/face-outline.svg","components/Camera.js","components/SelfieCaptureButton.js","components/PersonImages.js","pages/contribute/Step2.js","pages/contribute/Step3.js","pages/Contribute.js","pages/Database.js","pages/About.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Step1","className","Spinner","text","animation","role","Activity","children","isVisible","classNames","AcitvitySpinner","OkButton","props","Button","BackButton","variant","Cropper","image","onCrop","onBack","cropperRef","React","useRef","src","initialAspectRatio","guides","autoCrop","ref","dragMode","movable","rotatable","scalable","zoomable","onClick","console","log","imageElement","current","cropper","getCropBoxData","width","height","getCroppedCanvas","toDataURL","meta","hash","md5","fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","base64ToImage","base64","Image","SelfieUploadButton","onSelfie","fileInputRef","useState","rawImage","setRawImage","isCropperMode","setIsCropperMode","onImageUploadedHandler","event","a","target","files","Utils","img","cleanup","value","onBodyFocusHandler","document","body","onfocus","setTimeout","click","type","accept","capture","onChange","style","croppedImage","Camera","onCapture","isReady","setIsReady","webcamRef","onCaptureHandler","useCallback","getScreenshot","audio","mirrored","screenshotFormat","videoConstraints","facingMode","onUserMedia","faceOutline","SelfieCaptureButton","mode","setMode","onBackHandler","PersonImages","index","images","setImages","onSelfieHandler","imageElements","map","data-image-hash","backgroundImage","Step2","Step3","Contribute","step","setStep","getStepClassNames","i","1","2","3","Database","About","NotFound","App","Navbar","bg","expand","Container","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iWAYeA,EAXF,WACX,OACE,oCACE,oDACA,uH,wBCqBSC,G,MA1BD,WACZ,OACE,0BAASC,UAAU,eAAnB,UACE,oBAAIA,UAAU,cAAd,mBACA,8DAC+B,iDAD/B,MACyD,wDADzD,+EAGiC,mDAHjC,iEAIiC,0CAJjC,qCAMA,kEACmC,wCADnC,mDACiG,8CADjG,oDAGiD,wCAHjD,iBAG6E,qCAH7E,OARF,wCAcE,+BACE,oDAAsB,oDACtB,kFACA,0EACA,+D,wGCPOC,EATC,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAChB,OACE,sBAAKF,UAAU,cAAf,UACE,cAAC,IAAD,CAAkBG,UAAU,SAASC,KAAK,WAAW,uBADvD,OAEIF,QAFJ,IAEIA,IAAQ,iBCAVG,EAAW,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,UAC3B,OACE,sBAAKP,UAAWQ,IAAW,CACzB,UAAY,EACZ,WAAcD,IAFhB,UAIE,cAAC,EAAD,IACCD,MAKDG,EAAkB,kBAAM,qBAAKT,UAAU,mBAAf,SAAkC,cAAC,EAAD,OAEhEK,EAASK,SAAW,SAACC,GAAD,OAAW,cAACC,EAAA,EAAD,aAAQZ,UAAU,gCAAmCW,KACpFN,EAASQ,WAAa,SAACF,GAAD,OAAW,cAACC,EAAA,EAAD,aAAQZ,UAAU,iCAAiCc,QAAQ,aAAgBH,KAE7FN,Q,gBC4BAU,EA7CC,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OACzBC,EAAaC,IAAMC,OAAO,MAmBhC,OACE,qBAAKrB,UAAU,eAAf,SACE,cAAC,EAAD,CAAUO,WAAW,EAArB,SACIS,GAAS,CACT,cAAC,IAAD,CAEEM,IAAKN,EAAMM,IACXC,mBAAoB,EACpBC,QAAQ,EACRC,UAAU,EACVC,IAAKP,EACLQ,SAAS,OACTC,SAAS,EACTC,WAAW,EACXC,UAAU,EACVC,UAAU,GAVN,WAYN,cAAC,EAASrB,SAAV,CAAgCsB,QAlClB,WACpBC,QAAQC,IAAI,iBACZ,IAAMC,EAAY,OAAGhB,QAAH,IAAGA,OAAH,EAAGA,EAAYiB,QAC3BC,EAAO,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAcE,QAHJ,EAIAA,EAAQC,iBAA1BC,EAJkB,EAIlBA,MAAOC,EAJW,EAIXA,OACTlB,EAAMe,EAAQI,mBAAmBC,YACvCT,QAAQC,IAAR,yBAA8BK,EAA9B,YAAuCC,EAAvC,OACAvB,EAAO,CACLK,IAAKA,EACLqB,KAAM,CACJC,KAAMC,IAAIvB,GACViB,MAAOA,EACPC,OAAQA,MAsBN,SAAwD,cAAC,IAAD,KAAjC,UACvB,cAAC,EAAS3B,WAAV,CAAoCmB,QAASd,EAA7C,SAAqD,cAAC,IAAD,KAA5B,kBC9CtB4B,EAAe,SAAAC,GAAI,OAAI,IAAIC,SAAQ,SAACC,EAASC,GACxD,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,kBAAML,EAAQE,EAAOI,SACrCJ,EAAOK,QAAU,SAAAC,GAAK,OAAIP,EAAOO,QAGtBC,EAAgB,SAAAC,GAAM,OAAI,IAAIX,SAAQ,SAACC,EAASC,GAC3D,IAAMlC,EAAQ,IAAI4C,MAClB5C,EAAMsC,OAAS,kBAAML,EAAQjC,IAC7BA,EAAMwC,QAAU,SAAAC,GAAK,OAAIP,EAAOO,IAChCzC,EAAMM,IAAMqC,MC0ECE,EA7Ea,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACtBC,EAAe3C,IAAMC,SADe,EAEVD,IAAM4C,SAAS,MAFL,mBAEnCC,EAFmC,KAEzBC,EAFyB,OAGA9C,IAAM4C,UAAS,GAHf,mBAGnCG,EAHmC,KAGpBC,EAHoB,KAUpCC,EAAsB,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACvBxB,EAAOuB,EAAME,OAAOC,MAAM,GADH,SAEXC,EAAmB3B,GAFR,cAEvBzB,EAFuB,gBAGXoD,EAAoBpD,GAHT,OAGvBqD,EAHuB,OAI7BT,EAAY,CACV5C,IAAKA,EACLqB,KAAM,CACJC,KAAMC,IAAIvB,GACViB,MAAOoC,EAAIpC,MACXC,OAAQmC,EAAInC,UATa,2CAAH,sDAuBtBoC,EAAU,WACdb,EAAa3B,QAAQyC,MAAQ,KAC7BT,GAAiB,GACjBF,EAAY,OAORY,EAAqB,WACzBC,SAASC,KAAKC,QAAU,KAExBC,YAAW,WACNnB,EAAa3B,QAAQyC,OACxBD,MACC,MAGL,OACE,uBAAM5E,UAAU,uBAAhB,UACE,cAACY,EAAA,EAAD,CAAQoB,QAjDmB,WAC7BoC,GAAiB,GACjBL,EAAa3B,QAAQ+C,SA+CnB,oBACA,uBACEC,KAAK,OACLC,OAAO,wBACPC,QAAQ,OACR5D,IAAKqC,EACLwB,SAAUlB,EACVrC,QAtBwB,WAC5B+C,SAASC,KAAKC,QAAUH,GAsBpBU,MAAO,CACL,QAAW,UAGbrB,GACA,cAAC,EAAD,CACEnD,MAAOiD,EACPhD,OAzCc,SAACwE,GACrB3B,EAAS2B,GACTb,KAwCM1D,OA9Cc,WACpB0D,W,iBCjCW,G,MAAA,IAA0B,0C,QC2D1Bc,EAlDA,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,UAAWzE,EAAa,EAAbA,OAAa,EACVE,IAAM4C,UAAS,GADL,mBACjC4B,EADiC,KACxBC,EADwB,KAElCC,EAAY1E,IAAMC,OAAO,MACzB0E,EAAmB3E,IAAM4E,YAAN,sBACvB,8BAAAzB,EAAA,6DACEtC,QAAQC,IAAI,oBACNZ,EAAMwE,EAAU1D,QAAQ6D,gBAFhC,SAGsBvB,EAAoBpD,GAH1C,OAGQN,EAHR,OAIEiB,QAAQC,IAAR,0BAA+BlB,EAAMuB,MAArC,YAA8CvB,EAAMwB,OAApD,OACAmD,EAAU,CACRrE,IAAKA,EACLqB,KAAM,CACJC,KAAMC,IAAIvB,GACViB,MAAOvB,EAAMuB,MACbC,OAAQxB,EAAMwB,UAVpB,2CAcA,CAACsD,IAOH,OACE,qBAAK9F,UAAU,SAAf,SACE,eAAC,EAAD,CAAUO,WAAW,EAArB,UACE,sBAAKP,UAAU,iBAAf,UACE,cAAC,IAAD,CACEkG,OAAO,EACPC,UAAU,EACVC,iBAAiB,YACjBC,iBAAkB,CAChBC,WAAY,QAEdC,YAAa,kBAAMV,GAAW,IAC9BnE,IAAKoE,IAEP,qBAAK9F,UAAU,eAAesB,IAAKkF,OAEnCZ,GACA,cAAC,EAASlF,SAAV,CAAmBsB,QAAS+D,EAA5B,SAA8C,cAAC,IAAD,MAEhD,cAAC,EAASlF,WAAV,CAAqBmB,QAvBL,WACpBd,KAsBI,SAA6C,cAAC,IAAD,YCGtCuF,EAhDc,SAAC,GAAgB,IAAf3C,EAAc,EAAdA,SAAc,EACX1C,IAAM4C,SAAS,MADJ,mBACpCC,EADoC,KAC1BC,EAD0B,OAEnB9C,IAAM4C,SAAS,MAFI,mBAEpC0C,EAFoC,KAE9BC,EAF8B,KAarCC,EAAgB,WACpB,OAAOF,GACL,IAAK,SACHC,EAAQ,MACR,MACF,IAAK,UACHA,EAAQ,UAGZzC,EAAY,OASd,OACE,uBAAMlE,UAAU,wBAAhB,UACE,cAACY,EAAA,EAAD,CAAQoB,QA7BoB,WAC9B2E,EAAQ,WA4BN,qBACW,WAATD,GACA,cAAC,EAAD,CAAQf,UA3BW,SAAChB,GACxBT,EAAYS,GACZgC,EAAQ,YAyBiCzF,OAAQ0F,IAEpC,YAATF,GACA,cAAC,EAAD,CACE1F,MAAOiD,EACPhD,OAfc,SAAC0D,GACrBb,EAASa,GACTgC,EAAQ,MACRzC,EAAY,OAaNhD,OAAQ0F,QCdHC,EA/BM,SAAC,GAAmB,IAAlBzB,EAAiB,EAAjBA,KAAM0B,EAAW,EAAXA,MAAW,EACV1F,IAAM4C,SAAS,IADL,mBAC/B+C,EAD+B,KACvBC,EADuB,KAGhCC,EAAkB,SAACtC,GACvBqC,EAAU,GAAD,mBAAKD,GAAL,CAAapC,MAGlBuC,EAAgBH,EACnBI,KAAI,SAAAnG,GAAK,OAAI,qBAEZoG,kBAAiBpG,EAAM2B,KAAKC,KAC5B4C,MAAO,CACL6B,gBAAgB,QAAD,OAAUrG,EAAMM,IAAhB,OAEjBtB,UAAU,iBALLgB,EAAM2B,KAAKC,SAOpB,OACE,gCACE,gCACE,+BAAOwC,IACP,qCAAQ0B,QAEV,8BAAMI,IACN,gCACE,cAAC,EAAD,CAAoBpD,SAAUmD,IAC9B,cAAC,EAAD,CAAqBnD,SAAUmD,WCbxBK,G,MAZD,WACZ,OACE,oCACE,oBAAItH,UAAU,cAAd,oBACA,cAAC,EAAD,CAAcoF,KAAK,WACnB,cAAC,EAAD,CAAcA,KAAK,WACnB,cAAC,EAAD,CAAcA,KAAK,MAAM0B,MAAO,IAChC,cAAC,EAAD,CAAc1B,KAAK,MAAM0B,MAAO,SCAvBS,EAXD,WACZ,OACE,oCACE,oBAAIvH,UAAU,cAAd,oBACA,oGC6CSwH,EArCI,WAAO,IAAD,EACCpG,IAAM4C,SAAS,GADhB,mBAChByD,EADgB,KACVC,EADU,KAGjBC,EAAoB,SAACC,GAAD,OAAOpH,IAAW,CAC1C,yBAA0BoH,GAAKH,EAC/B,uBAAwBG,EAAIH,EAC5B,yBAA0BG,EAAIH,KAGhC,OACE,0BAASzH,UAAU,aAAnB,UAEE,sBAAKA,UAAU,iBAAf,UACE,sBAAMA,UAAW2H,EAAkB,GAAnC,2BACA,sBAAM3H,UAAW2H,EAAkB,GAAnC,4BACA,sBAAM3H,UAAW2H,EAAkB,GAAnC,+BAIA,CACEE,EAAG,cAAC,EAAD,IACHC,EAAG,cAAC,EAAD,IACHC,EAAG,cAAC,EAAD,KACHN,GAGJ,sBAAKzH,UAAU,mBAAf,UACY,GAARyH,GAAa,cAAC7G,EAAA,EAAD,CAAQE,QAAQ,kBAAkBkB,QAAS,kBAAM0F,EAAQ,IAAzD,wBACbD,EAAO,GAAK,cAAC7G,EAAA,EAAD,CAAQE,QAAQ,oBAAoBkB,QAAS,kBAAM0F,EAAQD,EAAK,IAAhE,kBACJ,GAARA,GAAa,cAAC7G,EAAA,EAAD,CAAQE,QAAQ,kBAAkBkB,QAAS,kBAAM0F,EAAQ,IAAzD,kBACL,GAARD,GAAa,cAAC7G,EAAA,EAAD,CAAQE,QAAQ,kBAAkBkB,QAAS,kBAAM0F,EAAQ,IAAzD,2BC9BRM,EAXE,WACf,OACE,oCACE,0CACA,2HCOSC,EAXD,WACZ,OACE,oCACE,uCACA,qDC2DAC,EAAW,kBAAO,sCAETC,EA5CH,WAEV,OACE,eAAC,IAAD,WACE,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACE,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAOI,MAAR,CAAcC,GAAIC,IAAMC,GAAG,IAA3B,gCACA,cAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,qBAC7B,cAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,mBAApB,SACE,eAACC,EAAA,EAAD,CAAKhJ,UAAU,UAAf,UACE,cAACgJ,EAAA,EAAIN,KAAL,CAAUD,GAAIC,IAAMC,GAAG,IAAvB,kBACA,cAACK,EAAA,EAAIN,KAAL,CAAUD,GAAIC,IAAMC,GAAG,cAAvB,wBACA,cAACK,EAAA,EAAIN,KAAL,CAAUD,GAAIC,IAAMC,GAAG,YAAvB,sBACA,cAACK,EAAA,EAAIN,KAAL,CAAUD,GAAIC,IAAMC,GAAG,SAAvB,6BAMR,cAACJ,EAAA,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,cAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,UACE,cAAC,EAAD,CAAUA,KAAK,iBC5CZC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/E,SAASgF,eAAe,SAM1BZ,M","file":"static/js/main.16863bab.chunk.js","sourcesContent":["\nconst Home = () => {\n  return (\n    <section>\n      <h1>CommunityFaceKinDB</h1>\n      <p>\n        Database of facial images colleced by community annotated with kinship attributes.\n      </p>\n    </section>\n  );\n}\n\nexport default Home;","const Step1 = () => {\n  return (\n    <section className=\"text-justify\">\n      <h2 className=\"text-center\">Intro</h2>\n      <p>\n        One of the critical steps in <b>machine learning</b> / <b>artificial intelligence</b> is obtaining large and qualitative dataset.\n\n        To provide such dataset to the <b>research community</b>, we are kindly asking you for\n        your contribution. Please take <b>5 minutes</b> and contribute to our dataset.\n      </p>\n      <p>\n        We are tackling the problem of a <b>kinship</b> recognition, verification and synthesis of the <b>facial images</b>.\n\n        While some similar dataset already exists, the <b>quality</b> of images is <b>poor</b>.\n      </p>\n      Properties of high quality image are:\n      <ul>\n        <li>The image contain <b>only single face</b></li>\n        <li>Resolution of the facial area is big as possible</li>\n        <li>Face is possioned directly to the camera</li>\n        <li>Whole face is visible</li>\n      </ul>\n    </section>\n  );\n};\n\nexport default Step1;","import {\n  Spinner as BootstrapSpinner \n} from \"react-bootstrap\";\n\nconst Spinner = ({text}) => {\n  return (\n    <div className=\"text-center\">\n      <BootstrapSpinner animation=\"border\" role=\"status\" /><br/>\n      { text ?? \"Loading...\" }\n    </div>\n  );\n};\n\nexport default Spinner;","import React from \"react\";\nimport classNames from \"classnames\";\nimport {\n  Button\n} from \"react-bootstrap\";\nimport \"./Activity.scss\";\nimport Spinner from \"./Spinner\";\n\nconst Activity = ({children, isVisible}) => {\n  return (\n    <div className={classNames({\n      \"activity\": true,\n      \"invisible\": !isVisible\n    })}>\n      <AcitvitySpinner />\n      {children}\n    </div>\n  );\n};\n\nconst AcitvitySpinner = () => <div className=\"activity-spinner\"><Spinner /></div>;\n\nActivity.OkButton = (props) => <Button className=\"activity-btn activity-ok-btn\" {...props}/>;\nActivity.BackButton = (props) => <Button className=\"activity-btn activity-back-btn\" variant=\"secondary\" {...props}/>;\n\nexport default Activity;","import React from \"react\";\nimport ReactCropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\nimport \"./Cropper.scss\";\nimport md5 from \"md5\";\nimport Activity from \"./Activity\";\nimport * as Icon from \"react-bootstrap-icons\";\n\nconst Cropper = ({image, onCrop, onBack}) => {\n  const cropperRef = React.useRef(null);\n\n  const onCropHandler = () => {\n    console.log(\"Crop event...\");\n    const imageElement = cropperRef?.current;\n    const cropper = imageElement?.cropper;\n    const { width, height } = cropper.getCropBoxData();\n    const src = cropper.getCroppedCanvas().toDataURL();\n    console.log(`Cropped image (${width}x${height}).`)\n    onCrop({\n      src: src,\n      meta: {\n        hash: md5(src),\n        width: width,\n        height: height,\n      }\n    });\n  };\n\n  return (\n    <div className=\"face-cropper\">\n      <Activity isVisible={true}>\n        { image && [\n          <ReactCropper\n            key=\"cropper\"\n            src={image.src}\n            initialAspectRatio={1}\n            guides={false}\n            autoCrop={true}\n            ref={cropperRef}\n            dragMode=\"crop\"\n            movable={false}\n            rotatable={false}\n            scalable={false}\n            zoomable={false}\n          />,\n          <Activity.OkButton key=\"ok-btn\" onClick={onCropHandler}><Icon.Check2 /></Activity.OkButton>,\n          <Activity.BackButton key=\"back-btn\" onClick={onBack}><Icon.X /></Activity.BackButton>\n        ]}\n      </Activity>\n    </div>\n  );\n};\n\nexport default Cropper;\n","export const fileToBase64 = file => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = () => resolve(reader.result);\n  reader.onerror = error => reject(error);\n});\n\nexport const base64ToImage = base64 => new Promise((resolve, reject) => {\n  const image = new Image();\n  image.onload = () => resolve(image);\n  image.onerror = error => reject(error);\n  image.src = base64;\n});","import React from \"react\";\nimport md5 from \"md5\";\nimport Cropper from \"./Cropper\";\nimport {\n  Button\n} from 'react-bootstrap';\nimport * as Utils from \"../utils\";\n\nconst SelfieUploadButton =  ({onSelfie}) => {\n  const fileInputRef = React.useRef();\n  const [rawImage, setRawImage] = React.useState(null);\n  const [isCropperMode, setIsCropperMode] = React.useState(false);\n\n  const onImageUploadRequested = () => {\n    setIsCropperMode(true);\n    fileInputRef.current.click();\n  }\n\n  const onImageUploadedHandler = async (event) => {\n    const file = event.target.files[0];\n    const src = await Utils.fileToBase64(file);\n    const img = await Utils.base64ToImage(src);\n    setRawImage({\n      src: src,\n      meta: {\n        hash: md5(src),\n        width: img.width,\n        height: img.height,\n      }\n    });\n  };\n\n  const onBackHandler = () => {\n    cleanup();\n  };\n\n  const onCropHandler = (croppedImage) => {\n    onSelfie(croppedImage);\n    cleanup();\n  };\n\n  const cleanup = () => {\n    fileInputRef.current.value = null;\n    setIsCropperMode(false);\n    setRawImage(null);\n  };\n\n  const setOnBodyFocusHandler = () => {\n    document.body.onfocus = onBodyFocusHandler;\n  };\n\n  const onBodyFocusHandler = () => {\n    document.body.onfocus = null;\n    // HACK - close loading screan if cancel button is clicked\n    setTimeout(() => {\n      if(fileInputRef.current.value) return;\n      cleanup();\n    }, 500);\n  };\n\n  return (\n    <span className=\"selfie-upload-button\">\n      <Button onClick={onImageUploadRequested}>Upload</Button>\n      <input \n        type=\"file\"\n        accept=\"image/png, image/jpeg\"\n        capture=\"user\"\n        ref={fileInputRef}\n        onChange={onImageUploadedHandler}\n        onClick={setOnBodyFocusHandler}\n        style={{\n          \"display\": \"none\"\n        }}\n      />\n      { isCropperMode && \n        <Cropper\n          image={rawImage}\n          onCrop={onCropHandler}\n          onBack={onBackHandler}\n        />\n      }\n    </span>\n  );\n}\n\nexport default SelfieUploadButton;","export default __webpack_public_path__ + \"static/media/face-outline.d8b16a1f.svg\";","import Webcam from \"react-webcam\";\nimport React from 'react';\nimport Activity from \"./Activity\";\nimport \"./Camera.scss\";\nimport faceOutline from \"../resources/face-outline.svg\"\nimport * as Icon from 'react-bootstrap-icons';\nimport md5 from \"md5\";\nimport * as Utils from \"../utils\";\n\nconst Camera = ({ onCapture, onBack }) => {\n  const [isReady, setIsReady] = React.useState(false);\n  const webcamRef = React.useRef(null);\n  const onCaptureHandler = React.useCallback(\n    async () => {\n      console.log(\"Capture event...\")\n      const src = webcamRef.current.getScreenshot();\n      const image = await Utils.base64ToImage(src);\n      console.log(`Image captured (${image.width}x${image.height}).`)\n      onCapture({\n        src: src,\n        meta: {\n          hash: md5(src),\n          width: image.width,\n          height: image.height,\n        }\n      });\n    },\n    [webcamRef]\n  );\n  \n  const onBackHandler = () => {\n    onBack();\n  };\n\n  return (\n    <div className=\"camera\">\n      <Activity isVisible={true}>\n        <div className=\"camera-wrapper\">\n          <Webcam\n            audio={false}\n            mirrored={true}\n            screenshotFormat=\"image/png\"\n            videoConstraints={{\n              facingMode: \"user\",\n            }}\n            onUserMedia={() => setIsReady(true)}\n            ref={webcamRef}\n          />\n          <img className=\"face-outline\" src={faceOutline} />\n        </div>\n        { isReady && \n          <Activity.OkButton onClick={onCaptureHandler}><Icon.Camera /></Activity.OkButton>\n        }\n        <Activity.BackButton onClick={onBackHandler}><Icon.X /></Activity.BackButton>\n      </Activity>\n    </div>\n  );\n}\n\nexport default Camera;\n","import React from \"react\";\nimport md5 from \"md5\";\nimport Cropper from \"./Cropper\";\nimport Camera from \"./Camera\";\nimport {\n  Button\n} from 'react-bootstrap';\n\nconst SelfieCaptureButton =  ({onSelfie}) => {\n  const [rawImage, setRawImage] = React.useState(null);\n  const [mode, setMode] = React.useState(null);\n\n  const onImageCaptureRequested = () => {\n    setMode(\"camera\");\n  };\n\n  const onCaptureHandler = (img) => {\n    setRawImage(img);\n    setMode(\"cropper\");\n  }\n\n  const onBackHandler = () => {\n    switch(mode) {\n      case \"camera\":\n        setMode(null);\n        break;\n      case \"cropper\":\n        setMode(\"camera\");\n        break;\n    }\n    setRawImage(null);\n  };\n\n  const onCropHandler = (img) => {\n    onSelfie(img);\n    setMode(null);\n    setRawImage(null);\n  };\n\n  return (\n    <span className=\"selfie-capture-button\">\n      <Button onClick={onImageCaptureRequested}>Capture</Button>\n      { mode === \"camera\" && \n        <Camera onCapture={onCaptureHandler} onBack={onBackHandler} />\n      }\n      { mode === \"cropper\" && \n        <Cropper\n          image={rawImage}\n          onCrop={onCropHandler}\n          onBack={onBackHandler}\n        />\n      }\n    </span>\n  );\n}\n\nexport default SelfieCaptureButton;","import React from \"react\";\nimport SelfieUploadButton from \"./SelfieUploadButton\";\nimport SelfieCaptureButton from \"./SelfieCaptureButton\";\n\nconst PersonImages = ({type, index}) => {\n  const [images, setImages] = React.useState([]);\n\n  const onSelfieHandler = (img) => {\n    setImages([...images, img]);\n  };\n\n  const imageElements = images\n    .map(image => <div\n      key={image.meta.hash}\n      data-image-hash={image.meta.hash}\n      style={{\n        backgroundImage: `url(\"${image.src}\")`\n      }}\n      className=\"image-preview\" />);\n\n  return (\n    <div>\n      <div>\n        <span>{type}</span>\n        <span>#{index}</span>\n      </div>\n      <div>{imageElements}</div>\n      <div>\n        <SelfieUploadButton onSelfie={onSelfieHandler} />\n        <SelfieCaptureButton onSelfie={onSelfieHandler} />\n      </div>\n    </div>\n  );\n};\n\nexport default PersonImages;","import React from \"react\";\nimport PersonImages from \"../../components/PersonImages\";\nimport \"./step2.css\";\n\nconst Step2 = () => {\n  return (\n    <section>\n      <h2 className=\"text-center\">Upload</h2>\n      <PersonImages type=\"Father\" />\n      <PersonImages type=\"Mother\" />\n      <PersonImages type=\"Son\" index={1} />\n      <PersonImages type=\"Son\" index={2} />\n    </section>\n  );\n};\n\nexport default Step2;","const Step3 = () => {\n  return (\n    <section>\n      <h2 className=\"text-center\">Finish</h2>\n      <p>\n        Strinjaj se z obdelavo podatkov, povdari anonimnost, zahvali se\n      </p>\n    </section>\n  );\n};\n\nexport default Step3;","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./Contribute.css\";\n\nimport Step1 from \"./contribute/Step1\";\nimport Step2 from \"./contribute/Step2\";\nimport Step3 from \"./contribute/Step3\";\n\nimport {\n  Button\n} from 'react-bootstrap';\n\nconst Contribute = () => {\n  const [step, setStep] = React.useState(1);\n\n  const getStepClassNames = (i) => classNames({\n    \"is-active text-primary\": i == step,\n    \"is-done text-success\": i < step,\n    \"is-done text-secondary\": i > step,\n  });\n\n  return (\n    <section className=\"contribute\">\n\n      <div className=\"workflow-steps\">\n        <span className={getStepClassNames(1)}>Step 1: Intro</span>\n        <span className={getStepClassNames(2)}>Step 2: Upload</span>\n        <span className={getStepClassNames(3)}>Step 3: Finish</span>\n      </div>\n\n      {\n        {\n          1: <Step1 />,\n          2: <Step2 />,\n          3: <Step3 />\n        }[step]\n      }\n\n      <div className=\"workflow-buttons\">\n        { step == 1 && <Button variant=\"outline-primary\" onClick={() => setStep(2)}>Contribute</Button> }\n        { step > 1 && <Button variant=\"outline-secondary\" onClick={() => setStep(step-1)}>Back</Button> }\n        { step == 2 && <Button variant=\"outline-primary\" onClick={() => setStep(3)}>Next</Button> }\n        { step == 3 && <Button variant=\"outline-primary\" onClick={() => setStep(4)}>Finish</Button> }\n      </div>\n\n    </section>\n  );\n}\n\nexport default Contribute;","\nconst Database = () => {\n  return (\n    <section>\n      <h1>Database</h1>\n      <p>\n        info about database, attributes, annotations, number of families, number of faces, ...\n      </p>\n    </section>\n  );\n}\n\nexport default Database;","\nconst About = () => {\n  return (\n    <section>\n      <h1>About</h1>\n      <p>\n        about, cite, ...\n      </p>\n    </section>\n  );\n}\n\nexport default About;","import React from \"react\";\nimport { \n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\"\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Navbar,\n  Nav,\n  Container\n} from 'react-bootstrap';\n\nimport Home from \"./pages/Home\"\nimport Contribute from \"./pages/Contribute\"\nimport Database from \"./pages/Database\"\nimport About from \"./pages/About\"\n\nconst baseUrl = process.env.REACT_APP_BASE_URL;\n\nconst App = () => {\n\n  return (\n    <Router>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand as={Link} to=\"/\" >CommunityFaceKinDB</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link as={Link} to=\"/\" >Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/contribute\">Contribute</Nav.Link>\n              <Nav.Link as={Link} to=\"/database\">Database</Nav.Link>\n              <Nav.Link as={Link} to=\"/about\">About</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Container>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/contribute\">\n            <Contribute />\n          </Route>\n          <Route exact path=\"/database\">\n            <Database />\n          </Route>\n          <Route exact path=\"/about\" >\n            <About />\n          </Route>\n          <Route>\n            <NotFound path=\"*\" />\n          </Route>\n        </Switch>\n      </Container>\n    </Router>\n  );\n};\n\nconst NotFound = () => (<h1>404</h1>);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}